# Python program to convert text
# file to JSON  
import json
import urllib.request
import requests

cveList = []
currentCve = {}
cvePatched = True
cveCount = 1

# NGCS Jenkins doesn't require any auth
target_url = "http://willikins.bne.opengear.com/view/ngcs/job/ngcs/lastSuccessfulBuild/artifact/ngcs/build/tmp-glibc/deploy/images/ogpuma/og-image-consoleserver-ogpuma.cve"
data = urllib.request.urlopen(target_url)

# Comment out the two lines above and uncomment the two lines below to test with a local file
#testFile = 'exampleReport.cve'
#data = open(testFile)
  
for line in data:
    # reading line by line from the text file
    data = line.strip()

    # changes whether you're using urlopen or a local file
    #data = data.split(":", 1)
    data = data.decode("utf8").split(":", 1)

    field = data[0]
    if len(data) > 1:
        value = data[1].strip()


    if field == "PACKAGE NAME":
        currentCve["packageName"] = value
    elif field == "PACKAGE VERSION":
        currentCve["packageVersion"] = value
    elif field == "CVE":
        currentCve["cveId"] = value
    elif field == "CVE STATUS":
        if "Unpatched" in value:
            cvePatched = False
    elif field == "CVE SUMMARY":
        currentCve["cveSummary"] = value
    elif field == "CVSS v2 BASE SCORE":
        currentCve["cvssv2"] = value
    elif field == "CVSS v3 BASE SCORE":
        currentCve["cvssv3"] = value
    elif field == "MORE INFORMATION":
        currentCve["nistLink"] = value
        if not cvePatched:
            currentCve["cveNumber"] = cveCount
            cveCount = cveCount + 1
            cveList.append(currentCve)
        currentCve = {}
        cvePatched = True
  
  
# creating json file        
print(len(cveList))
out_file = open("/home/toddc/Code/cve-ui/src/data.js", "w")
out_file.write('export const ngcsCveData = ')
json.dump(cveList, out_file, indent = 4)
out_file.write(';')
out_file.close()

### The above code takes care of NGCS. now let's do LH ###

# Reset some variables
cveList = []
currentCve = {}
cvePatched = True
cveCount = 1

target_url = "https://lighthouse-jenkins.opengear.com/job/ironman-umbrella/job/master/lastSuccessfulBuild/artifact/ironman-umbrella/build/tmp/deploy/images/lighthouse-aws/og-image-lighthouse-aws-lighthouse-aws.cve"
api_key = "11a7b5b77f65e3cc2802e67f822e0e9ef8"
file = requests.get(target_url, auth=('toddc', api_key), stream=True)

for line in file.iter_lines():
    # print(line)
    # reading line by line from the text file
    data = line.strip()

    # changes whether you're using urlopen or a local file
    data = data.decode("utf8").split(":", 1)

    field = data[0]
    if len(data) > 1:
        value = data[1].strip()


    if field == "PACKAGE NAME":
        currentCve["packageName"] = value
    elif field == "PACKAGE VERSION":
        currentCve["packageVersion"] = value
    elif field == "CVE":
        currentCve["cveId"] = value
    elif field == "CVE STATUS":
        if "Unpatched" in value:
            cvePatched = False
    elif field == "CVE SUMMARY":
        currentCve["cveSummary"] = value
    elif field == "CVSS v2 BASE SCORE":
        currentCve["cvssv2"] = value
    elif field == "CVSS v3 BASE SCORE":
        currentCve["cvssv3"] = value
    elif field == "MORE INFORMATION":
        currentCve["nistLink"] = value
        if not cvePatched:
            currentCve["cveNumber"] = cveCount
            cveCount = cveCount + 1
            cveList.append(currentCve)
        currentCve = {}
        cvePatched = True


# creating json file
print(len(cveList))
out_file = open("/home/toddc/Code/cve-ui/src/data-lh-aws.js", "w")
out_file.write('export const lhAwsCveData = ')
json.dump(cveList, out_file, indent = 4)
out_file.write(';')
out_file.close()
